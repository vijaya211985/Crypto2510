# -*- coding: utf-8 -*-
"""Classical_Caesar.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AdFzcvgl3IEr4080rJRUxKksV7ABuUAL
"""

# caesar_cipher_tool.py

def caesar_cipher(text, shift, mode='encrypt'):
    result = ""
    if mode == 'decrypt':
        shift = -shift

    for char in text:
        if char.isalpha():
            base = ord('A') if char.isupper() else ord('a')
            shifted = (ord(char) - base + shift) % 26 + base
            result += chr(shifted)
        else:
            result += char
    return result

def main():
    print("=== Caesar Cipher Tool ===")
    print("1. Encode (Encrypt)")
    print("2. Decode (Decrypt)")
    choice = input("Choose an option (1 or 2): ").strip()

    if choice not in ['1', '2']:
        print("Invalid selection. Please choose 1 or 2.")
        return

    text = input("Enter the message: ")
    try:
        key = int(input("Enter the key (0â€“25): "))
        if not 0 <= key <= 25:
            raise ValueError
    except ValueError:
        print("Invalid key. Please enter an integer between 0 and 25.")
        return

    if choice == '1':
        result = caesar_cipher(text, key, mode='encrypt')
        print(f"\nCiphertext: {result}")
    else:
        result = caesar_cipher(text, key, mode='decrypt')
        print(f"\nPlaintext: {result}")

if __name__ == "__main__":
    main()
